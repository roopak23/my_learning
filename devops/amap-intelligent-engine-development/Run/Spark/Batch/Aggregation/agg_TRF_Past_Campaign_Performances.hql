SET hive.auto.convert.join= FALSE;

INSERT OVERWRITE TABLE trf_past_campaign_performances 
select 
sys_datasource,
date_converted,
`date`,
creation_date,
system_id,
tech_order_id,
tech_line_id,
remote_id,
report_id,
device,
time_of_day,
day_of_week,
time_range,
gender,
age,
family_status,
first_party_data,
second_party_data,
third_party_data,
income,
keyword_match_type,
keyword,
display_format,
ad_copy,
social_placement,
creative_name,
placement,
network_type,
country,
state,
region,
city,
ad_slot,
SUM(clicks) as clicks,
SUM(impressions) as impressions,
SUM(spend) as spend,
SUM(spend_gads) as spend_gads,
SUM(reach) as reach,
CASE WHEN SUM(impressions) = 0 THEN 0 ELSE 
SUM(clicks)/SUM(impressions) END as ctr,
SUM(conversions) as conversions,
SUM(cprm) as cprm,
SUM(cpcv) as cpcv,
post_engagement,
SUM(player_100) as player_100,
SUM(search_impression_share) as search_impression_share,
SUM(display_impression_share) as display_impression_share,
SUM(cpm) as cpm,
SUM(cpc) as cpc,
SUM(cpa) as cpa,
SUM(cpv) as cpv,
SUM(player_25) as player_25,
SUM(player_50) as player_50,
SUM(player_75) as player_75,
frequency_capping,
frequency_capping_quantity,
SUM(view) as view,
CASE WHEN SUM(impressions) = 0 THEN 0 ELSE 
SUM(view)/SUM(impressions) END as view_rate,
SUM(post_reaction) as post_reaction,
SUM(comment) as comment,
SUM(onsite_conversion_post_save) as onsite_conversion_post_save,
SUM(link_click) as link_click,
SUM(`like`) as `like`,
ad_quality_ranking,
SUM(player_mute) AS player_mute,
SUM(player_unmute) AS player_unmute,
SUM(player_engaged_views) AS player_engaged_views,
SUM(player_starts) AS player_starts,
SUM(player_skip) AS player_skip,
SUM(sampled_viewed_impressions) AS sampled_viewed_impressions,
SUM(sampled_tracked_impressions) AS sampled_tracked_impressions,
CASE WHEN SUM(sampled_tracked_impressions) = 0 THEN 0 ELSE 
SUM(sampled_viewed_impressions)/SUM(sampled_tracked_impressions) END AS sampled_in_view_rate,
SUM(companion_impressions) AS companion_impressions,
SUM(companion_clicks) AS companion_clicks,
SUM(unique_id) AS unique_id,
SUM(frequency_per_unique_id) AS frequency_per_unique_id,
SUM(data_cost) AS data_cost,
deal_id,
site_list_name,
SUM(bids) AS bids,
CASE WHEN SUM(impressions) = 0 THEN 0 ELSE
SUM(win_rate)/SUM(impressions) END AS win_rate,
SUM(email_total_sent) AS email_total_sent,
SUM(unique_open_rate) AS unique_open_rate,
SUM(unique_click_rate) AS unique_click_rate,
SUM(sms_total_sent) AS sms_total_sent,
ad_unit_id  AS adserver_adslot_id,
ad_unit_name AS adserver_adslot_name
from 
(select
      sys_datasource,
      cast(from_unixtime(rn.`date` div 1000) as timestamp) date_converted,
      `date`,
      cast(from_unixtime(rn.creation_date div 1000) as timestamp) creation_date,
      system_id,
      tech_order_id,
      tech_line_id,
      remote_id,
      report_id,
      device,
      time_of_day,
      day_of_week,
      time_range,
      gender,
      age,
      family_status,
      first_party_data,
      second_party_data,
      third_party_data,
      income,
      keyword_match_type,
      keyword,
      display_format,
      ad_copy,
      social_placement,
      creative_name,
      placement,
      network_type,
      country,
      state,
      region,
      city,
      ad_slot,
      clicks,
      impressions,
      spend,
      spend_gads,
      reach,
      ctr,
      conversions,
      cprm,
      cpcv,
      post_engagement,
      player_100,
      search_impression_share,
      display_impression_share,
      cpm,
      cpa,
      cpc,
      cpv,
      player_25,
      player_50,
      player_75,
      frequency_capping,
      frequency_capping_quantity,
      view,
      view_rate,
      post_reaction,
      comment,
      onsite_conversion_post_save,
      link_click,
      `like`,
      ad_quality_ranking,
	player_mute,
	player_unmute,
	player_engaged_views,
	player_starts,
	player_skip,
	sampled_viewed_impressions,
	sampled_tracked_impressions,
	sampled_in_view_rate,
	companion_impressions,
	companion_clicks,
	unique_id,
	frequency_per_unique_id,
	data_cost,
	deal_id,
	site_list_name,
	bids,
	win_rate,
      email_total_sent,
      unique_open_rate,
      unique_click_rate,
      sms_total_sent,
      ad_unit_id,
      ad_unit_name
from
      (
      SELECT
            ROW_NUMBER() over (partition by  
      cast(from_unixtime(`date` div 1000) as date),
            system_id,
            tech_order_id,
            tech_line_id,
            remote_id,
            report_id,
            device,
            time_of_day,
            day_of_week,
            time_range,
            gender,
            age,
            family_status,
            first_party_data,
            second_party_data,
            third_party_data,
            income,
            keyword_match_type,
            keyword,
            display_format,
            ad_copy,
            social_placement,
            creative_name,
            placement,
            network_type,
            country,
            state,
            region,
            city,
            ad_slot,
            deal_id,
            site_list_name,
            ad_unit_id
      order by
            creation_date desc
      ) rn,*
      FROM
            stg_sa_past_campaign_performances) rn
where
      rn = 1) tpcp GROUP BY
      sys_datasource,
      date_converted,
`date`,
creation_date,
system_id,
tech_order_id,
tech_line_id,
remote_id,
report_id,
device,
time_of_day,
day_of_week,
time_range,
gender,
age,
family_status,
first_party_data,
second_party_data,
third_party_data,
income,
keyword_match_type,
keyword,
display_format,
ad_copy,
social_placement,
creative_name,
placement,
network_type,
country,
state,
region,
city,
ad_slot,
post_engagement,
frequency_capping,
frequency_capping_quantity,
ad_quality_ranking,
deal_id,
site_list_name,
ad_unit_id,
ad_unit_name